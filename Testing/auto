#!/bin/bash
systemctl enable --now systemd-timesyncd >/dev/null 2>&1; RETVAL=$?
systemctl enable systemd-resolved >/dev/null 2>&1; RETVAL=$?
systemctl start systemd-resolved
systemctl restart dhcpcd
dhcpcd >/dev/null
region=/Europe/Moscow
disk=vda
sub='rw,noatime,compress=zstd:2,ssd,space_cache=v2,discard=async,subvol'
#boot=nvme0n1p1
#root=nvme0n1p3
#swap=nvme0n1p2

boot=vda1
root=vda3
swap=vda2

mkfs.vfat -F32 /dev/$boot
mkfs.btrfs -f /dev/$root
mkswap /dev/$swap
swapon /dev/$swap

mount  /dev/$root /mnt

btrfs su cr /mnt/@

btrfs su cr /mnt/@home

btrfs su cr /mnt/@var

btrfs su cr /mnt/@log

btrfs su cr /mnt/@pkg

btrfs su cr /mnt/@.snapshots

umount -R /mnt

mount -o ${sub}=@ /dev/$root /mnt

mkdir -p /mnt/{boot,home,var,var/log,var/cache/pacman/pkg,.snapshots}

mount -o ${sub}=@home /dev/$root /mnt/home

mount -o ${sub}=@var /dev/$root /mnt/var

mount -o ${sub}=@log /dev/$root /mnt/var/log

mount -o ${sub}=@pkg /dev/$root /mnt/var/cache/pacman/pkg

mount -o ${sub}=@.snapshots /dev/$root /mnt/.snapshots

mkdir /mnt/boot/efi ; mount /dev/$boot /mnt/boot/efi

Uefi="grub-install --target=x86_64-efi --efi-directory=/boot/efi --bootloader-id=ShefOS --no-nvram --removable /dev/$disk ; grub-install /dev/$disk"

clear
read -p "








                                                        -> Введите пароль root :  " password

read -p "

                                                 -> Введите имя учетной записи :  " username


read -p "
                                                -> Введите пароль пользователя :  " userpassword

clear

# AMD graphc_drivers

graphc_drivers='basestrap -i /mnt mesa mesa-demos lib32-mesa vulkan-radeon lib32-vulkan-radeon vulkan-icd-loader lib32-vulkan-icd-loader amf-headers libteam distorm hip-runtime-amd hsa-amd-aqlprofile-bin miopen-hip nvtop python-distorm python-pyamdgpuinfo xf86-video-amdgpu network-manager-applet mesa-utils mesa-vdpau vulkan-mesa-layers lib32-libva-mesa-driver lib32-mesa-demos lib32-mesa-utils lib32-mesa-vdpau lib32-vulkan-mesa-layers vulkan-tools vkd3d --noconfirm'

CTRL=corectrl

clear
#----------------------------------------------------------------------|
#                                                      #
#                         Pacman                       #
#                                                      #
#----------------------------------------------------------------------|
sed -i "/\[multilib\]/,/Include/"'s/^#//' /etc/pacman.conf
sed -i s/'#ParallelDownloads = 5'/'ParallelDownloads = 5'/g /etc/pacman.conf
sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf
sed -i s/'#Color'/'ILoveCandy'/g /etc/pacman.conf
sed -i s/'CheckSpace'/'#CheckSpace'/g /etc/pacman.conf
sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf
echo '









───────────────────────────────────────────────────────────────|
──────────────────────
────────────────────── ██████╗  █████╗  ██████╗███╗   ███╗ █████╗ ███╗   ██╗
────────────────────── ██╔══██╗██╔══██╗██╔════╝████╗ ████║██╔══██╗████╗  ██║
──▒▒▒▒▒────▄████▄───── ██████╔╝███████║██║     ██╔████╔██║███████║██╔██╗ ██║
─▒─▄▒─▄▒──███▄█▀────── ██╔═══╝ ██╔══██║██║     ██║╚██╔╝██║██╔══██║██║╚██╗██║
─▒▒▒▒▒▒▒─▐████──█──█── ██║     ██║  ██║╚██████╗██║ ╚═╝ ██║██║  ██║██║ ╚████║
─▒▒▒▒▒▒▒──█████▄────── ╚═╝     ╚═╝  ╚═╝ ╚═════╝╚═╝     ╚═╝╚═╝  ╚═╝╚═╝  ╚═══╝
─▒─▒─▒─▒───▀████▀─────────────────────────────────────────────────────────────────|

                       Пожалуйста пдождите , идет настройка скачивания пакетов,

                                  это займет пару мнгновений ) .......

              ─────────────────────────────────────────────────────────────────────────────────────|
'
sleep 4
pacman-mirrors --fasttrack
pacman -Syy
pacman -Sy arch-install-scripts --noconfirm
basestrap -i /mnt base base-devel linux64 linux64-acpi_call linux64-headers linux-firmware dosfstools btrfs-progs intel-ucode amd-ucode iucode-tool archlinux-keyring manjaro-keyring cups bluez bluez-utils manjaro-tools-base networkmanager dhcpcd dhclient vim nano pipewire pipewire-alsa pipewire-jack pipewire-media-session manjaro-pipewire zsh zsh-completions mhwd mhwd-db python-gobject ccache clang ninja meson make cmake libtool gcc gcc-libs glibc lib32-glibc --noconfirm
fstabgen -U /mnt >> /mnt/etc/fstab
arch-chroot /mnt /bin/bash -c "ln -sf /usr/share/zoneinfo/$region /etc/localtime"
arch-chroot /mnt /bin/bash -c "hwclock --systohc"
arch-chroot /mnt /bin/bash -c "sed -i s/'#en_US.UTF-8'/'en_US.UTF-8'/g /etc/locale.gen"
arch-chroot /mnt /bin/bash -c "sed -i s/'#ru_RU.UTF-8'/'ru_RU.UTF-8'/g /etc/locale.gen"
arch-chroot /mnt /bin/bash -c "locale-gen"
arch-chroot /mnt /bin/bash -c "echo 'LANG=ru_RU.UTF-8' > /etc/locale.conf"
arch-chroot /mnt /bin/bash -c "echo 'KEYMAP=ru' > /etc/vconsole.conf"
arch-chroot /mnt /bin/bash -c "echo 'FONT=cyr-sun16' >> /etc/vconsole.conf"
arch-chroot /mnt /bin/bash -c "echo 'Manjaro' > /etc/hostname"
arch-chroot /mnt /bin/bash -c "echo '127.0.0.1 localhost' > /etc/hosts"
arch-chroot /mnt /bin/bash -c "echo '::1       localhost' >> /etc/hosts"
arch-chroot /mnt /bin/bash -c "echo '127.0.0.1 Manjaro.localdomain Manjaro' >> /etc/hosts"
#----------------------------PACMAN--------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "sed -i s/'#ParallelDownloads = 5'/'ParallelDownloads = 5'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#Color'/'ILoveCandy'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'CheckSpace'/'#CheckSpace'/g /etc/pacman.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#VerbosePkgLists'/'VerbosePkgLists'/g /etc/pacman.conf"
#-------------------------------------------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "sed -i s/'# %wheel ALL=(ALL:ALL) ALL'/'%wheel ALL=(ALL:ALL) ALL'/g /etc/sudoers"
#----------------------------SUDOERS------------------------------------------------------------------
echo "root:$password" | arch-chroot /mnt chpasswd
arch-chroot /mnt /bin/bash -c "mkinitcpio -P"
arch-chroot /mnt /bin/bash -c "pacman -Syy grub grub-btrfs efibootmgr --noconfirm"
arch-chroot /mnt /bin/bash -c "useradd -m -G wheel -s /bin/bash $username"
echo "$username:$userpassword" | arch-chroot /mnt chpasswd
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"
arch-chroot /mnt /bin/bash -c "${Uefi}"
arch-chroot /mnt /bin/bash -c "${BIOS}"
arch-chroot /mnt /bin/bash -c "${BBOOT}"
arch-chroot /mnt /bin/bash -c "${IGRUB}"
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
#----------------------------GRUB----------------------------------------------------------------------
sed -i s/'GRUB_CMDLINE_LINUX_DEFAULT="quiet udev.log_priority=3"'/'GRUB_CMDLINE_LINUX_DEFAULT="quiet splash udev.log_priority=0 rootfstype=btrfs zswap.enabled=0 page_alloc.shuffle=1 split_lock_detect=off pci=pcie_bus_perf selinux=0 raid=noautodetect noibrs noibpb no_stf_barrier tsx=on tsx_async_abort=off elevator=noop mitigations=off"'/g /mnt/etc/default/grub
arch-chroot /mnt /bin/bash -c "sed -i s/'GRUB_DEFAULT=saved'/'GRUB_DEFAULT=0'/g /etc/default/grub"
arch-chroot /mnt /bin/bash -c "sed -i s/'GRUB_TIMEOUT=5'/'GRUB_TIMEOUT=0'/g /etc/default/grub"
arch-chroot /mnt /bin/bash -c "sed -i s/'GRUB_SAVEDEFAULT=true'/'GRUB_SAVEDEFAULT=false'/g /etc/default/grub"
arch-chroot /mnt /bin/bash -c "sed -i s/'MODULES=()'/'MODULES=(crc32c libcrc32c zlib_deflate btrfs)'/g /etc/mkinitcpio.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'HOOKS=(base udev autodetect modconf kms keyboard keymap consolefont block filesystems fsck)'/'HOOKS=(base udev autodetect modconf kms keyboard keymap block filesystems fsck)'/g /etc/mkinitcpio.conf"
#-----------------------------MAKEPKG---------------------------------------------------
sed -i s/'CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS"'/'CXXFLAGS="-march=native -mtune=native -O2 -pipe -fno-plt"'/g /mnt/etc/makepkg.conf
sed -i s/'#RUSTFLAGS="-C opt-level=2"'/'RUSTFLAGS="-C opt-level=2 -C target-cpu=native"'/g /mnt/etc/makepkg.conf
sed -i s/'MAKEFLAGS="-j2"'/'MAKEFLAGS="-j$(($(nproc)+1))"'/g /mnt/etc/makepkg.conf
sed -i s/'BUILDENV=(!distcc color !ccache check !sign)'/'BUILDENV=(!distcc color ccache check !sign)'/g /mnt/etc/makepkg.conf
fileName="/mnt/etc/makepkg.conf"
flags="\"-march=native -mtune=native -O2 -pipe -fno-plt\""

CFLAGSline=`grep -hnr "\"" $fileName | grep CFLAGS | cut -d ":" -f1 |head -n1`
for (( i=$CFLAGSline+1;i<`wc -l $fileName|cut -d " " -f1`;i++ )) {
  output=`sed -n "$i p" $fileName`
  if [[ `echo $output | grep "\""` ]];then
   break
  fi
}
sed -i "s/CFLAGS=.*/CFLAGS=$flags/" $fileName
sed -i "$(($CFLAGSline+1)),$i d" $fileName
#--------------------------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "mkinitcpio -P"
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
pacman -Sc --noconfirm
pacman -Syy
arch-chroot /mnt /bin/bash -c "pacman-mirrors --fasttrack"
arch-chroot /mnt /bin/bash -c "pacman -Syyuu --noconfirm"
#-------------------------------------------------------------------------------------------
arch-chroot /mnt /bin/bash -c "${nvidia_driver}"
arch-chroot /mnt /bin/bash -c "${hwddriver}"
${graphc_drivers}
#-------------------------------------------------------------------------------------------
#kde='plasma sddm sddm-kcm konsole kmix dolphin discover manjaro-settings-manager-kcm plasma-wayland-session ksysguard'
gnom='gnome gdm'
pacman -Sc --noconfirm
pacman -Syy
basestrap -i /mnt xorg xorg-xrandr xorg-server xdg-utils $gnom xorg-xinit xdg-user-dirs pcmanfm  manjaro-printer print-manager pavucontrol pipewire pipewire-jack pipewire-alsa pipewire-media-session flameshot kcalc ark screenfetch neofetch htop bpytop firefox gwenview dragon kwrite mousepad easyeffects gparted timeshift timeshift-autosnap-manjaro manjaro-input baobab libpamac libpamac-flatpak-plugin libpamac-snap-plugin pamac-cli pamac-gtk webapp-manager-manjaro noto-fonts-emoji ttf-font-awesome ttf-dejavu ttf-ubuntu-font-family libappimage xapp-appimage-thumbnailer ffmpegthumbnailer ffmpegthumbs yay openvpn networkmanager-openvpn git wget cups manjaro-pipewire os-prober go zsh zsh-completions qemu-desktop gnome-boxes libvirt virt-manager telegram-desktop spectacle udisks2 gvfs-mtp gvfs-gphoto2 gvfs-afc gvfs-smb sshfs cups tumbler poppler-glib ffmpegthumbnailer freetype2 libgsf totem gnome-epub-thumbnailer file-roller file-roller unzip ntfs-3g imagemagick ffmpegthumbs flac wavpack lame a52dec libdca libmad libmpcdec opencore-amr opus speex libvorbis faac faad2 libfdk-aac  fdkaac  jasper libwebp libavif libheif aom dav1d rav1e svt-av1 libde265 libdv libmpeg2 schroedinger libtheora libvpx  x264 x265 xvidcore mkvtoolnix-cli ogmtools gstreamer xine-lib gst-libav ffmpeg gstreamer gstreamer-vaapi gstreamer-docs qt6-multimedia-gstreamer ktorrent qbittorrent p7zip dnsmasq os-prober apparmor zstd cabextract tar openssl lib32-openssl gamemode lib32-gamemode desktop-file-utils curl dbus haveged dbus-broker cpupower zenity lsb-release nss lsof lib32-freetype2 lib32-libgl lib32-gcc-libs lib32-libx11 lib32-libxss lib32-alsa-plugins lib32-libgpg-error lib32-nss mhwd mhwd-db gnome-disk-utility lrzip unrar unzip unace squashfs-tools ttf-liberation audacious audacious-plugins playerctl android-file-transfer android-tools android-udev alsa-utils alsa-plugins  alsa-oss alsa-firmware sof-firmware alsa-ucm-conf  alsa-tools sof-tools asciiquarium kdiskmark partitionmanager inxi steam steam-native-runtime gputils lshw extra-cmake-modules sdl2 python-gobject btrfs-assistant snapper-gui intel-gpu-tools gobject-introspection libdazzle libappindicator-gtk3 python-matplotlib python-peewee python-rx python-pyxdg blas cblas lapack libimagequant libindicator-gtk3 python-contourpy python-cycler python-dateutil python-fonttools python-kiwisolver python-mako python-markdown python-markupsafe python-numpy python-pillow python-pyparsing python-six qhull  python-cairo python-xlib ifuse usbmuxd libplist libimobiledevice libunistring lib32-libunistring cmatrix nmon python python-pip hdparm ncdu net-tools iproute2 dstat ccze sl pydf gtop netstat-nat python-pygame python-pygame-sdl2 firewalld lolcat ventoy irqbalance --noconfirm
#-------------------------------------------------------------------------------------------

#                          Cpupower


#-------------------------------------------------------------------------------------------



#                                               AUR

#------------------------MAKEPKG>CONF------------------------------
sed -i s/'CXXFLAGS="$CFLAGS -Wp,-D_GLIBCXX_ASSERTIONS"'/'CXXFLAGS="-march=native -mtune=native -O2 -pipe -fno-plt"'/g /etc/makepkg.conf
sed -i s/'#RUSTFLAGS="-C opt-level=2"'/'RUSTFLAGS="-C opt-level=2 -C target-cpu=native"'/g /etc/makepkg.conf
sed -i s/'MAKEFLAGS="-j2"'/'MAKEFLAGS="-j$(($(nproc)+1))"'/g /etc/makepkg.conf
sed -i s/'BUILDENV=(!distcc color !ccache check !sign)'/'BUILDENV=(!distcc color ccache check !sign)'/g /etc/makepkg.conf
fileName="/etc/makepkg.conf"
flags="\"-march=native -mtune=native -O2 -pipe -fno-plt\""

CFLAGSline=`grep -hnr "\"" $fileName | grep CFLAGS | cut -d ":" -f1 |head -n1`
for (( i=$CFLAGSline+1;i<`wc -l $fileName|cut -d " " -f1`;i++ )) {
  output=`sed -n "$i p" $fileName`
  if [[ `echo $output | grep "\""` ]];then
   break
  fi
}
sed -i "s/CFLAGS=.*/CFLAGS=$flags/" $fileName
sed -i "$(($CFLAGSline+1)),$i d" $fileName
# <────────────────────────────────────────────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
pacman -Sc --noconfirm
pacman -Syy
pacman -S base-devel python-gobject extra-cmake-modules sdl2 gobject-introspection libdazzle libappindicator-gtk3 python-cairo python-matplotlib python-peewee python-rx python-pyxdg python-xlib libunistring lib32-libunistring ccache meson autoconf-archive docbook-xml docbook-xsl glib2-docs itstool mallard-ducktype python-anytree python-lxml python-pygments yelp-tools yelp-xsl gnome-common gtk-doc intltool python python-pip clang ninja meson make cmake libtool gcc gcc-libs glibc lib32-glibc --noconfirm
pacman -Sc --noconfirm
pacman -Syy
# <────────────────────────────────────────────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
mkdir -p /mnt/home/$username/tools
mkdir -p /mnt/home/$username/tools/apps
mkdir -p /mnt/home/$username/tools/apps/gwe
mkdir -p /mnt/home/$username/tools/apps/pypyweb
mkdir -p /mnt/home/$username/tools/apps/gc
chown manjaro /mnt/home/$username/tools
chown manjaro /mnt/home/$username/tools/apps
chown manjaro /mnt/home/$username/tools/apps/gwe
chown manjaro /mnt/home/$username/tools/apps/pypyweb
chown manjaro /mnt/home/$username/tools/apps/gc
cd /mnt/home/$username/tools
# <────────────────────────────────────────────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
packages=(startwine)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
packages=(ananicy-cpp ananicy-rules grub-customizer-git zramswap stacer-bin hardinfo sddm-config-editor-git antimicrox xdman8 ttf-ms-fonts ttf-tahoma system-monitoring-center $IPC) # ttf-kochi-substitute
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
packages=(onlyoffice-bin)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
packages=(gconf)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps/gc ; makepkg -src --noconfirm"
  cd ..
done
pacman -U /mnt/home/$username/tools/apps/gc/*.tar.zst --noconfirm
pacman -Sc --noconfirm
pacman -Syy
packages=(lib32-gconf)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps/gc ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
packages=(python-proxy_tools)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps/pypyweb ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
pacman -U /mnt/home/$username/tools/apps/pypyweb/*.tar.zst --noconfirm
packages=(python-pywebview)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps/pypyweb ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
# <────────────────────────────────────────────────────────────────────>
# <─────────────────────      GWE      ────────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
packages=($PI $PP)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps/gwe ; makepkg -src --noconfirm"
  cd ..
done
pacman -Sc --noconfirm
pacman -Syy
pacman -U /mnt/home/$username/tools/apps/gwe/*.tar.zst --noconfirm
packages=($GWE)
for package in "${packages[@]}"; do
  git clone https://aur.archlinux.org/$package.git
  chown manjaro /mnt/home/$username/tools/$package
  cd $package
  su manjaro -c "export PKGDEST=/mnt/home/$username/tools/apps/gwe ; makepkg -src --noconfirm"
  cd ..
done
# <────────────────────────────────────────────────────────────────────>
# <─────────────────────      GWE      ────────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
cd /mnt/home/$username/tools
git clone https://github.com/VHSgunzo/grub-snap.git
arch-chroot /mnt /bin/bash -c "cd home/$username/tools/grub-snap ; make install"
arch-chroot /mnt /bin/bash -c "pacman -U home/$username/tools/apps/*.tar.zst --noconfirm"
arch-chroot /mnt /bin/bash -c "pacman -U home/$username/tools/apps/gwe/*.tar.zst --noconfirm"
arch-chroot /mnt /bin/bash -c "pacman -U home/$username/tools/apps/pypyweb/*.tar.zst --noconfirm"
arch-chroot /mnt /bin/bash -c "pacman -U home/$username/tools/apps/gc/*.tar.zst --noconfirm"
arch-chroot /mnt /bin/bash -c "pacman -S $CTRL --noconfirm"
arch-chroot /mnt /bin/bash -c "rm -Rf home/$username/tools"
arch-chroot /mnt /bin/bash -c "fc-cache --force"
# <────────────────────────────────────────────────────────────────────>
# <─────────────────────     OpenGL      ──────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
echo "__GL_THREADED_OPTIMIZATIONS=1" >> /mnt/etc/environment
echo "MESA_GL_VERSION_OVERRIDE=4.5" >> /mnt/etc/environment
echo "MESA_GLSL_VERSION_OVERRIDE=450" >> /mnt/etc/environment
# <────────────────────────────────────────────────────────────────────>
# <─────────────────────      SYSTEMD  ────────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
arch-chroot /mnt /bin/bash -c "sed -i s/'#SystemMaxUse='/'SystemMaxUse=1'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#SystemMaxFileSize='/'SystemMaxFileSize=1'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#SystemMaxFiles=100'/'SystemMaxFiles=1'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#RuntimeMaxUse='/'RuntimeMaxUse=1'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#RuntimeMaxFileSize='/'RuntimeMaxFileSize=1'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#RuntimeMaxFiles=100'/'RuntimeMaxFiles=1'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#ForwardToSyslog=no'/'ForwardToSyslog=no'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "sed -i s/'#ForwardToWall=yes'/'ForwardToWall=yes'/g /etc/systemd/journald.conf"
arch-chroot /mnt /bin/bash -c "journalctl --vacuum-size=1M"
arch-chroot /mnt /bin/bash -c "journalctl --verify"
# <────────────────────────────────────────────────────────────────────>
# <─────────────────────     SYSTEMD      ─────────────────────────────>
# <────────────────────────────────────────────────────────────────────>
arch-chroot /mnt /bin/bash -c "mkinitcpio -P"
arch-chroot /mnt /bin/bash -c "grub-mkconfig -o /boot/grub/grub.cfg"
arch-chroot /mnt /bin/bash -c "systemctl enable bluetooth"
arch-chroot /mnt /bin/bash -c "systemctl enable cups"
arch-chroot /mnt /bin/bash -c "systemctl enable libvirtd"
arch-chroot /mnt /bin/bash -c "systemctl enable systemd-timesyncd"
arch-chroot /mnt /bin/bash -c "systemctl enable systemd-resolved"
arch-chroot /mnt /bin/bash -c "systemctl enable fstrim.timer"
arch-chroot /mnt /bin/bash -c "fstrim -v /"
arch-chroot /mnt /bin/bash -c "systemctl enable ananicy-cpp"
arch-chroot /mnt /bin/bash -c "systemctl enable zramswap"
arch-chroot /mnt /bin/bash -c "systemctl enable irqbalance"
echo "ZRAM_COMPRESSION_ALGO=zstd" | tee -a /mnt/etc/zramswap.conf
arch-chroot /mnt /bin/bash -c "systemctl enable firewalld"
arch-chroot /mnt /bin/bash -c "systemctl enable cpupower"
arch-chroot /mnt /bin/bash -c "systemctl enable haveged"
arch-chroot /mnt /bin/bash -c "systemctl enable ${optimus}"
arch-chroot /mnt /bin/bash -c "systemctl enable --now dbus-broker.service"
arch-chroot /mnt /bin/bash -c "timeshift --check"
arch-chroot /mnt /bin/bash -c "systemctl enable NetworkManager"
arch-chroot /mnt /bin/bash -c "systemctl enable gdm --force"
#----------------------------------------------------------------------|
#                                                      #
#                     Umount and Exit                  #
#                                                      #
#----------------------------------------------------------------------|
echo '













───────────────────────────────────────────────────────────────────>
░░░░░░░░░░░░▄▄░░░░░░░░░
░░░░░░░░░░░█░░█░░░░░░░░
░░░░░░░░░░░█░░█░░░░░░░░
░░░░░░░░░░█░░░█░░░░░░░░
░░░░░░░░░█░░░░█░░░░░░░░
███████▄▄█░░░░░██████▄░░
▓▓▓▓▓▓█░░░░░░░░░░░░░░█░
▓▓▓▓▓▓█░░░░░░░░░░░░░░█░              Установка успешно завершена . Сейчас компьютер будет перезагружен .
▓▓▓▓▓▓█░░░░░░░░░░░░░░█░
▓▓▓▓▓▓█░░░░░░░░░░░░░░█░
▓▓▓▓▓▓█░░░░░░░░░░░░░░█░
▓▓▓▓▓▓█████░░░░░░░░░█░░
██████▀░░░░▀▀██████▀░░░░
  <─────────────────────────────────────────────────────────────────────────────────────────────────────────>


'

